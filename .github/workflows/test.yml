name: Test and Generate Badges

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: curl
          coverage: xdebug
          tools: composer:v2

      - name: Install dependencies
        run: composer install --no-progress --no-interaction

      - name: Create test directories
        run: |
          mkdir -p coverage
          mkdir -p .tmp-test-badges
          echo "Created test directories"

      - name: Run tests with coverage
        run: |
          ./vendor/bin/pest --coverage-text --coverage-clover=coverage/clover.xml

      - name: Calculate coverage percentage
        id: coverage
        run: |
          if [ -f "coverage/clover.xml" ]; then
            COVERAGE=$(php -r '
              $xml = simplexml_load_file("coverage/clover.xml");
              $metrics = $xml->xpath("//metrics");
              $totalElements = 0;
              $coveredElements = 0;
              foreach ($metrics as $metric) {
                $totalElements += (int)$metric["elements"];
                $coveredElements += (int)$metric["coveredelements"];
              }
              echo number_format(($coveredElements / $totalElements) * 100, 1) . "%";
            ')
            echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          else
            echo "coverage=0%" >> $GITHUB_OUTPUT
            echo "::warning::No coverage report found"
          fi

      # Test the badge generation functionality
      - name: Test basic badge generation
        run: |
          php bin/badge "test" "passing" ".tmp-test-badges/basic.svg"
          if [ ! -f ".tmp-test-badges/basic.svg" ]; then
            echo "::error::Basic badge generation failed"
            exit 1
          fi

      - name: Test badge with options
        run: |
          php bin/badge "test" "passing" ".tmp-test-badges/with-options.svg" \
            --color green \
            --style flat-square \
            --logo github \
            --logo-color white
          if [ ! -f ".tmp-test-badges/with-options.svg" ]; then
            echo "::error::Badge generation with options failed"
            exit 1
          fi

      - name: Test invalid inputs
        run: |
          if php bin/badge "test" "passing" ".tmp-test-badges/invalid.svg" --style invalid-style 2>&1 | grep -q "Invalid style"; then
            echo "::info::Invalid style test passed"
          else
            echo "::error::Invalid style test failed"
            exit 1
          fi

      # Store test artifacts for debugging if needed
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            .tmp-test-badges/*.svg
            coverage/clover.xml
          retention-days: 1

      # Generate repository badges only on main branch
      - name: Generate Repository Badges
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          mkdir -p badges

          # Generate build badge
          php bin/badge "build" "passing" "badges/build.svg" \
            --color green \
            --style flat-square \
            --logo github

          # Generate version badge
          php bin/badge "version" "${{ github.ref_name }}" "badges/version.svg" \
            --color blue \
            --style flat-square \
            --logo github

          # Generate coverage badge
          php bin/badge "coverage" "${{ steps.coverage.outputs.coverage }}" "badges/coverage.svg" \
            --color brightgreen \
            --style flat-square \
            --logo codecov

          # Generate license badge
          php bin/badge "license" "MIT" "badges/license.svg" \
            --color green \
            --style flat-square \
            --logo github

      # Commit and push badges if they changed
      - name: Commit badges
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Check if there are any changes to the badges
          if [[ -n "$(git status --porcelain badges/)" ]]; then
            git add badges/
            git commit -m "ðŸ”„ Update repository badges"
            git push
          else
            echo "No changes to badges detected"
          fi
